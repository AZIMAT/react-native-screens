import groovy.json.JsonSlurper

buildscript {
    ext.safeExtGet = {prop, fallback ->
        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath('com.android.tools.build:gradle:4.2.2')
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion', '1.4.10')}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:5.15.0"
    }
}

// spotless is only accessible within react-native-screens repo
if (project == rootProject) {
    apply from: 'spotless.gradle'
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

// Check whether Reanimated 2.x(#TODO merge neccessary changes in reanimated and release them to have a version with it)
// or higher is installed alongside RNScreens
def shouldUseCommonInterfaceFromReanimated() {
    def reanimated = rootProject.subprojects.find { it.name == 'react-native-reanimated' };
    if (reanimated != null) {
        def inputFile = new File(reanimated.projectDir, '../package.json')
        def json = new JsonSlurper().parseText(inputFile.text)
        def reanimatedVersion = json.version as String
        def (major, minor, patch) = reanimatedVersion.tokenize('.')
        return Integer.parseInt(major) == 2 && Integer.parseInt(minor) >= 3
    } else {
        return false
    }
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 28)

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 22)
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        // Include "common/" only when it's not provided by Reanimated to mitigate
        // multiple definitions of the same class preventing build
        if (!shouldUseCommonInterfaceFromReanimated()) {
            main.java.srcDirs += 'common/src/main/java'
        }
    }
}

repositories {
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        // Matches the RN Hello World template
        // https://github.com/facebook/react-native/blob/1e8f3b11027fe0a7514b4fc97d0798d3c64bc895/local-cli/templates/HelloWorld/android/build.gradle#L21
        url "$projectDir/../node_modules/react-native/android"
    }
    mavenCentral()
    mavenLocal()
    google()
}

dependencies {
    //noinspection GradleDynamicVersion
    if (shouldUseCommonInterfaceFromReanimated()) {
        // Include Reanimated as dependency to load the common interface
        implementation project(':react-native-reanimated')
    }
    implementation 'com.facebook.react:react-native:+'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.fragment:fragment:1.2.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
}
